{"version":3,"sources":["store/indexState.js","store/index.js","components/Hit/index.js","components/IndexSelector/index.js","App.js","index.js"],"names":["SET_INDEX_NAME","setIndexName","indexName","type","payload","initialState","reducer","enhancer","state","action","rootReducer","combineReducers","indexState","applyMiddleware","thunk","configureStore","preloadedState","createStore","Hit","hit","useSelector","alt","name","src","logoUrl","className","Highlight","attribute","team","points","score","Math","ceil","IndexSelector","dispatch","useDispatch","handleClick","value","a","changeSearchIndex","onClick","e","target","undefined","searchClient","algoliasearch","App","InstantSearch","HitsPerPage","defaultRefinement","items","label","RangeInput","translations","submit","ClearRefinements","RefinementList","SearchBox","Hits","hitComponent","Pagination","store","Root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aba80ae7.chunk.js","sourcesContent":["const SET_INDEX_NAME = 'indexName/setIndexName';\n\nconst setIndexName = (indexName) => ({\n    type: SET_INDEX_NAME,\n    payload: indexName\n});\n\nexport const changeSearchIndex = (indexName) => async dispatch => {\n    dispatch(setIndexName(indexName));\n};\n\nconst initialState = { indexName: \"nba-players\" };\n\nfunction reducer (state = initialState, action) {\n    let newState;\n    switch (action.type) {\n        case SET_INDEX_NAME:\n            newState = { ...state, indexName: action.payload };\n            return newState;\n        default:\n            return state;\n    };\n};\n\nexport default reducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport indexState from './indexState';\n\nconst rootReducer = combineReducers({\n    indexState\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import { Highlight } from \"react-instantsearch-dom\";\nimport { useSelector } from \"react-redux\";\nimport \"../../App.css\";\n\nexport const Hit = ({ hit }) => {\n  const indexName = useSelector((state) => state.indexState.indexName);\n  const logoUrlBase = \"https://instantsearch-logos.s3.amazonaws.com\";\n  return (\n    <div>\n      {indexName === \"nba-teams\" ? (\n        <img alt={hit.name} src={`${logoUrlBase}/${hit.logoUrl}`} />\n      ) : null}\n      <div className=\"hit-location\">\n        <Highlight attribute=\"location\" hit={hit} />\n      </div>\n      <div className=\"hit-name\">\n        <Highlight attribute=\"name\" hit={hit} />\n      </div>\n      <div className=\"hit-team\">{hit.team}\n        <Highlight attribute=\"team\" hit={hit} />\n      </div>\n      {hit.points && <div className=\"hit-points\">{hit.points} Points</div>}\n      {hit.score && (\n        /*\n        Perform the Math.ceil() operation on the frontend instead of at indexing\n        time to ensure that the score is still used in Algolia's tie-breaking\n        formula while not displaying unnecessarily precise digits to the user\n        */\n        <div className=\"hit-score\">Score: {Math.ceil(hit.score)}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Hit;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { changeSearchIndex } from \"../../store/indexState\";\nimport \"./IndexSelector.css\";\n\nexport const IndexSelector = () => {\n  const indexName = useSelector((state) => state.indexState.indexName);\n  const dispatch = useDispatch();\n  /* handleClick doesn't need to accept the entire event object\n    as an argument since the changeSearchIndex thunk accepts a single string to update the indexState in Redux\n    */\n  const handleClick = (value) => {\n    dispatch(changeSearchIndex(value));\n  };\n  return (\n    <div>\n      <button\n        onClick={(e) => handleClick(e.target.value)}\n        value=\"nba-players\"\n        className={indexName === \"nba-players\" ? \"active\" : undefined}>\n        Search for Players\n      </button>\n\n      <button\n        onClick={(e) => handleClick(e.target.value)}\n        value=\"nba-teams\"\n        className={indexName === \"nba-teams\" ? \"active\" : undefined}>\n        Search for Teams\n      </button>\n    </div>\n  );\n};\n\nexport default IndexSelector;\n","import {\n  InstantSearch,\n  SearchBox,\n  Hits,\n  ClearRefinements,\n  RefinementList,\n  HitsPerPage,\n  Pagination,\n  RangeInput,\n} from \"react-instantsearch-dom\";\nimport Hit from \"./components/Hit\";\nimport IndexSelector from \"./components/IndexSelector\";\nimport algoliasearch from \"algoliasearch/lite\";\nimport \"./App.css\";\nimport { useSelector } from \"react-redux\";\n\nconst searchClient = algoliasearch(\n  \"ROCHIEJW4S\",\n  \"a1d75e2e71aa32957c2360ee48bda44e\"\n);\n\nfunction App() {\n  const indexName = useSelector((state) => state.indexState.indexName);\n\n  return (\n    <div className=\"ais-InstantSearch\">\n      <IndexSelector />\n      <InstantSearch searchClient={searchClient} indexName={indexName}>\n        <div className=\"left-panel\">\n          <HitsPerPage\n            defaultRefinement={5}\n            items={[\n              {\n                value: 5,\n                label: \"5 hits per page\",\n              },\n              {\n                value: 10,\n                label: \"10 hits per page\",\n              },\n              {\n                value: 15,\n                label: \"15 hits per page\",\n              },\n              {\n                value: 20,\n                label: \"20 hits per page\",\n              },\n            ]}\n          />\n          <RangeInput\n            attribute={indexName === \"nba-teams\" ? \"score\" : \"points\"}\n            translations={{ submit: \"Go\" }}\n          />\n          <h2>Filter by {indexName === \"nba-players\" ? \"Team\" : \"Location\"}</h2>\n          <ClearRefinements />\n          <RefinementList\n            attribute={indexName === \"nba-teams\" ? \"location\" : \"team\"}\n          />\n        </div>\n        <div className=\"right-panel\">\n          <SearchBox />\n          <Hits hitComponent={Hit} />\n          <Pagination />\n        </div>\n      </InstantSearch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './store'\nimport { Provider } from 'react-redux';\nimport { changeSearchIndex } from './store/indexState';\nimport './index.css';\nimport App from './App';\n\nconst store = configureStore();\nif (process.env.NODE_ENV !== \"production\") {\n  window.store = store;\n  window.changeSearchIndex = changeSearchIndex;\n};\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}