{"version":3,"sources":["store/indexState.js","store/index.js","logos/atlanta_hawks.png","components/Hit/index.js","components/IndexSelector/index.js","App.js","reportWebVitals.js","index.js"],"names":["SET_INDEX_NAME","setIndexName","indexName","type","payload","initialState","reducer","enhancer","state","action","rootReducer","combineReducers","indexState","applyMiddleware","thunk","configureStore","preloadedState","createStore","Hit","hit","useSelector","alt","name","src","location","generateLogoUrl","className","Highlight","attribute","team","points","IndexSelector","dispatch","useDispatch","handleClick","value","a","changeSearchIndex","onClick","e","target","undefined","searchClient","algoliasearch","App","InstantSearch","HitsPerPage","items","label","defaultRefinement","ClearRefinements","RefinementList","SearchBox","Hits","hitComponent","Pagination","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","Root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70aa1377.chunk.js","sourcesContent":["const SET_INDEX_NAME = 'indexName/setIndexName';\n\nconst setIndexName = (indexName) => ({\n    type: SET_INDEX_NAME,\n    payload: indexName\n});\n\nexport const changeSearchIndex = (indexName) => async dispatch => {\n    dispatch(setIndexName(indexName));\n};\n\nconst initialState = { indexName: \"nba-players\" };\n\nfunction reducer (state = initialState, action) {\n    let newState;\n    switch (action.type) {\n        case SET_INDEX_NAME:\n            newState = { ...state, indexName: action.payload };\n            return newState;\n        default:\n            return state;\n    };\n};\n\nexport default reducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport indexState from './indexState';\n\nconst rootReducer = combineReducers({\n    indexState\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","export default __webpack_public_path__ + \"static/media/atlanta_hawks.3742b776.png\";","import { Highlight } from 'react-instantsearch-dom';\nimport { useSelector } from 'react-redux';\nimport logo from '../../logos/atlanta_hawks.png';\nimport '../../App.css';\n\nexport const Hit = ({ hit }) => {\n  const indexName = useSelector(state => state.indexState.indexName);\n  const generateLogoUrl = (hit) => {\n    return `../../logos/${hit.location}_${hit.name}.png`;\n  }\n\n  return (\n    <div>\n      {indexName === \"nba-teams\" ? (\n        <img\n          alt={hit.name}\n          src={generateLogoUrl(hit)} />\n      ) : null}\n      <div className=\"hit-name\">\n        <Highlight attribute=\"name\" hit={hit} />\n      </div>\n      <div className=\"hit-team\">\n        {hit.team}\n        <Highlight attribute=\"team\" hit={hit} />\n      </div>\n      <div className=\"hit-points\">\n        {hit.points} Points\n        <Highlight attribute=\"points\" hit={hit} />\n      </div>\n    </div>\n  );\n};\n\nexport default Hit;","import { useDispatch, useSelector } from \"react-redux\";\nimport { changeSearchIndex } from \"../../store/indexState\";\nimport \"./IndexSelector.css\";\n\nexport const IndexSelector = () => {\n  const indexName = useSelector((state) => state.indexState.indexName);\n  const dispatch = useDispatch();\n  /* handleClick doesn't need to accept the entire event object\n    as an argument since the changeSearchIndex thunk accepts a single string to update the indexState in Redux\n    */\n  const handleClick = (value) => {\n    dispatch(changeSearchIndex(value));\n  };\n  return (\n    <div>\n      <button\n        onClick={(e) => handleClick(e.target.value)}\n        value=\"nba-players\"\n        className={indexName === \"nba-players\" ? \"active\" : undefined}>\n        Search for Players\n      </button>\n\n      <button\n        onClick={(e) => handleClick(e.target.value)}\n        value=\"nba-teams\"\n        className={indexName === \"nba-teams\" ? \"active\" : undefined}>\n        Search for Teams\n      </button>\n    </div>\n  );\n};\n\nexport default IndexSelector;\n","import {\n  InstantSearch,\n  SearchBox,\n  Hits,\n  ClearRefinements,\n  RefinementList,\n  HitsPerPage,\n  Pagination\n} from \"react-instantsearch-dom\";\nimport Hit from './components/Hit';\nimport IndexSelector from './components/IndexSelector';\nimport algoliasearch from \"algoliasearch/lite\";\nimport \"./App.css\";\nimport { useSelector } from 'react-redux';\n\nconst searchClient = algoliasearch(\n  \"ROCHIEJW4S\",\n  \"a1d75e2e71aa32957c2360ee48bda44e\"\n);\n\nfunction App() {\n  const indexName = useSelector(state => state.indexState.indexName);\n\n  return (\n    <div className=\"ais-InstantSearch\">\n      <IndexSelector />\n      <InstantSearch searchClient={searchClient} indexName={indexName}>\n        <div className=\"left-panel\">\n          <HitsPerPage\n            items={[\n              { value: 5, label: \"Show 5 hits\" },\n              { value: 10, label: \"Show 10 hits\" },\n            ]}\n            defaultRefinement={5}\n          />\n          <h2>Teams</h2>\n          <ClearRefinements />\n          <RefinementList attribute={indexName === \"nba-teams\" ? \"location\" : \"team\"} />\n        </div>\n        <div className=\"right-panel\">\n          <SearchBox />\n          <Hits hitComponent={Hit} />\n          <Pagination />\n        </div>\n      </InstantSearch>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './store'\nimport { Provider } from 'react-redux';\nimport { changeSearchIndex } from './store/indexState';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = configureStore();\nif (process.env.NODE_ENV !== \"production\") {\n  window.store = store;\n  window.changeSearchIndex = changeSearchIndex;\n};\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}